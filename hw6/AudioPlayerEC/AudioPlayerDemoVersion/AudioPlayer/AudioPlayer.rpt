 
cpldfit:  version K.39                              Xilinx Inc.
                                  Fitter Report
Design Name: AudioPlayer                         Date: 11-20-2018,  1:21AM
Device Used: XC9572-7-PC44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
55 /72  ( 76%) 175 /360  ( 49%) 138/144 ( 96%)   51 /72  ( 71%) 31 /34  ( 91%)

** Function Block Resources **

Function    Mcells      FB Inps     Signals     Pterms      IO          
Block       Used/Tot    Used/Tot    Used        Used/Tot    Used/Tot    
FB1          18/18*      36/36*      36          38/90       6/ 9
FB2           9/18       31/36       31          25/90       6/ 9
FB3          13/18       35/36       35          57/90       0/ 8
FB4          15/18       36/36*      36          55/90       8/ 8*
             -----       -----                   -----       -----     
             55/72      138/144                 175/360     20/34 

* - Resource is exhausted

** Global Control Resources **

Signal 'Clock' mapped onto global clock net GCK3.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   10          10    |  I/O              :    28      28
Output        :    7           7    |  GCK/IO           :     2       3
Bidirectional :   13          13    |  GTS/IO           :     0       2
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total     31          31

** Power Data **

There are 55 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

INFO:Cpld - Inferring BUFG constraint for signal 'Clock' based upon the LOC
   constraint 'P7'. It is recommended that you declare this BUFG explicitedly in
   your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
INFO:Cpld - Inferring BUFG constraint for signal 'Switch1' based upon the LOC
   constraint 'P5'. It is recommended that you declare this BUFG explicitedly in
   your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
WARNING:Cpld:1007 - Removing unused input(s) 'Switch3'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'Switch4'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1239 - The global clock designation (BUFG) on signal 'Switch1_IBUF'
   is ignored. Most likely the signal is gated and therefore cannot be used as a
   global control signal.
*************************  Summary of Mapped Logic  ************************

** 20 Outputs **

Signal                                                                        Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                          Pts   Inps          No.  Type    Use     Mode Rate State
AudioAddr<13>                                                                 2     27    FB1_2   1    I/O     O       STD  FAST RESET
AudioAddr<14>                                                                 2     28    FB1_5   2    I/O     O       STD  FAST RESET
AudioAddr<15>                                                                 2     29    FB1_6   3    I/O     O       STD  FAST RESET
AudioAddr<16>                                                                 2     30    FB1_8   4    I/O     O       STD  FAST RESET
AudioAddr<17>                                                                 2     31    FB1_15  8    I/O     O       STD  FAST RESET
AudioAddr<18>                                                                 4     34    FB1_17  9    I/O     O       STD  FAST RESET
AudioAddr<7>                                                                  2     21    FB2_2   35   I/O     I/O     STD  FAST RESET
AudioAddr<8>                                                                  2     22    FB2_5   36   I/O     I/O     STD  FAST RESET
AudioAddr<9>                                                                  2     23    FB2_6   37   I/O     I/O     STD  FAST RESET
AudioAddr<10>                                                                 2     24    FB2_8   38   I/O     I/O     STD  FAST RESET
AudioAddr<11>                                                                 2     25    FB2_15  43   I/O     I/O     STD  FAST RESET
AudioAddr<12>                                                                 2     26    FB2_17  44   I/O     I/O     STD  FAST RESET
PWMOut                                                                        16    12    FB4_2   24   I/O     O       STD  FAST RESET
AudioAddr<0>                                                                  2     14    FB4_5   25   I/O     I/O     STD  FAST RESET
AudioAddr<1>                                                                  2     15    FB4_8   26   I/O     I/O     STD  FAST RESET
AudioAddr<2>                                                                  2     16    FB4_9   27   I/O     I/O     STD  FAST RESET
AudioAddr<3>                                                                  2     17    FB4_11  28   I/O     I/O     STD  FAST RESET
AudioAddr<4>                                                                  2     18    FB4_14  29   I/O     I/O     STD  FAST RESET
AudioAddr<5>                                                                  2     19    FB4_15  33   I/O     I/O     STD  FAST RESET
AudioAddr<6>                                                                  2     20    FB4_17  34   I/O     I/O     STD  FAST RESET

** 35 Buried Nodes **

Signal                                                                        Total Total Loc     Pwr  Reg Init
Name                                                                          Pts   Inps          Mode State
msgLfsrEn                                                                     2     22    FB1_1   STD  RESET
count<9>                                                                      2     11    FB1_3   STD  RESET
count<8>                                                                      2     10    FB1_4   STD  RESET
count<7>                                                                      2     9     FB1_7   STD  RESET
count<6>                                                                      2     8     FB1_9   STD  RESET
count<5>                                                                      2     7     FB1_10  STD  RESET
count<4>                                                                      2     6     FB1_11  STD  RESET
count<3>                                                                      2     5     FB1_12  STD  RESET
count<2>                                                                      2     4     FB1_13  STD  RESET
count<11>                                                                     2     13    FB1_14  STD  RESET
count<10>                                                                     2     12    FB1_16  STD  RESET
Fsm/currState_FFd1                                                            2     23    FB1_18  STD  RESET
pwmData<1>                                                                    3     15    FB2_14  STD  RESET
pwmData<0>                                                                    3     15    FB2_16  STD  RESET
$OpTx$FX_DC$41                                                                7     6     FB2_18  STD  
lfsrVal<0>                                                                    12    10    FB3_2   STD  RESET
msgEnable                                                                     1     2     FB3_6   STD  RESET
pwmData<7>                                                                    3     15    FB3_7   STD  RESET
pwmData<4>                                                                    3     15    FB3_8   STD  RESET
pwmData<3>                                                                    3     15    FB3_9   STD  RESET
pwmData<2>                                                                    3     15    FB3_10  STD  RESET
lfsrVal<5>                                                                    3     7     FB3_11  STD  RESET
lfsrVal<4>                                                                    3     7     FB3_12  STD  RESET
lfsrVal<3>                                                                    3     7     FB3_13  STD  RESET
lfsrVal<2>                                                                    3     7     FB3_14  STD  RESET
lfsrVal<1>                                                                    3     7     FB3_15  STD  RESET
$OpTx$FX_DC$40                                                                7     6     FB3_16  STD  
Comp/Mcompar_PWMOut_cmp_lt0001_ALB34/Comp/Mcompar_PWMOut_cmp_lt0001_ALB34_D2  10    11    FB3_18  STD  
Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2  10    11    FB4_1   STD  
count<0>                                                                      1     2     FB4_6   STD  RESET
count<1>                                                                      2     3     FB4_7   STD  RESET
pwmData<6>                                                                    3     15    FB4_10  STD  RESET
pwmData<5>                                                                    3     15    FB4_12  STD  RESET
lfsrVal<7>                                                                    3     7     FB4_13  STD  RESET
lfsrVal<6>                                                                    3     7     FB4_16  STD  RESET

** 11 Inputs **

Signal                                                                        Loc     Pin  Pin     Pin     
Name                                                                                  No.  Type    Use     
Switch1                                                                       FB1_9   5    GCK/I/O I
Clock                                                                         FB1_14  7    GCK/I/O GCK
Switch2                                                                       FB2_9   39   GSR/I/O I
AudioData<7>                                                                  FB3_2   11   I/O     I
AudioData<6>                                                                  FB3_5   12   I/O     I
AudioData<5>                                                                  FB3_8   13   I/O     I
AudioData<4>                                                                  FB3_9   14   I/O     I
AudioData<3>                                                                  FB3_11  18   I/O     I
AudioData<2>                                                                  FB3_14  19   I/O     I
AudioData<1>                                                                  FB3_15  20   I/O     I
AudioData<0>                                                                  FB3_17  22   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X(@)         - Signal used as input (wire-AND input) to the macrocell logic.
               The number of Signals Used may exceed the number of FB Inputs
               Used due to wire-ANDing in the switch matrix.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               36/0
Number of signals used by logic mapping into function block:  36
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
msgLfsrEn             2       0     0   3     FB1_1         (b)     (b)
AudioAddr<13>         2       0     0   3     FB1_2   1     I/O     O
count<9>              2       0     0   3     FB1_3         (b)     (b)
count<8>              2       0     0   3     FB1_4         (b)     (b)
AudioAddr<14>         2       0     0   3     FB1_5   2     I/O     O
AudioAddr<15>         2       0     0   3     FB1_6   3     I/O     O
count<7>              2       0     0   3     FB1_7         (b)     (b)
AudioAddr<16>         2       0     0   3     FB1_8   4     I/O     O
count<6>              2       0     0   3     FB1_9   5     GCK/I/O I
count<5>              2       0     0   3     FB1_10        (b)     (b)
count<4>              2       0     0   3     FB1_11  6     GCK/I/O (b)
count<3>              2       0     0   3     FB1_12        (b)     (b)
count<2>              2       0     0   3     FB1_13        (b)     (b)
count<11>             2       0     0   3     FB1_14  7     GCK/I/O GCK
AudioAddr<17>         2       0     0   3     FB1_15  8     I/O     O
count<10>             2       0     0   3     FB1_16        (b)     (b)
AudioAddr<18>         4       0     0   1     FB1_17  9     I/O     O
Fsm/currState_FFd1    2       0     0   3     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: AudioAddr<0>.PIN   13: AudioAddr<8>.PIN         25: count<11>.LFBK 
  2: AudioAddr<10>.PIN  14: AudioAddr<9>.PIN         26: count<1> 
  3: AudioAddr<11>.PIN  15: AudioAddr_13_OBUF.LFBK   27: count<2>.LFBK 
  4: AudioAddr<12>.PIN  16: AudioAddr_14_OBUF.LFBK   28: count<3>.LFBK 
  5: AudioAddr<18>      17: AudioAddr_15_OBUF.LFBK   29: count<4>.LFBK 
  6: AudioAddr<1>.PIN   18: AudioAddr_16_OBUF.LFBK   30: count<5>.LFBK 
  7: AudioAddr<2>.PIN   19: AudioAddr_17_OBUF.LFBK   31: count<6>.LFBK 
  8: AudioAddr<3>.PIN   20: Fsm/currState_FFd1.LFBK  32: count<7>.LFBK 
  9: AudioAddr<4>.PIN   21: Switch1                  33: count<8>.LFBK 
 10: AudioAddr<5>.PIN   22: Switch2                  34: count<9>.LFBK 
 11: AudioAddr<6>.PIN   23: count<0>                 35: msgEnable 
 12: AudioAddr<7>.PIN   24: count<10>.LFBK           36: msgLfsrEn 

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
msgLfsrEn            XXXXXXXXXXXXXXXXXXXX.X.............X.... 22      22
AudioAddr<13>        XXXX.XXXXXXXXXX.......XXXXXXXXXXXXX..... 27      27
count<9>             ......................X..XXXXXXXXXX..... 11      11
count<8>             ......................X..XXXXXXXX.X..... 10      10
AudioAddr<14>        XXXX.XXXXXXXXXXX......XXXXXXXXXXXXX..... 28      28
AudioAddr<15>        XXXX.XXXXXXXXXXXX.....XXXXXXXXXXXXX..... 29      29
count<7>             ......................X..XXXXXXX..X..... 9       9
AudioAddr<16>        XXXX.XXXXXXXXXXXXX....XXXXXXXXXXXXX..... 30      30
count<6>             ......................X..XXXXXX...X..... 8       8
count<5>             ......................X..XXXXX....X..... 7       7
count<4>             ......................X..XXXX.....X..... 6       6
count<3>             ......................X..XXX......X..... 5       5
count<2>             ......................X..XX.......X..... 4       4
count<11>            ......................XXXXXXXXXXXXX..... 13      13
AudioAddr<17>        XXXX.XXXXXXXXXXXXXX...XXXXXXXXXXXXX..... 31      31
count<10>            ......................XX.XXXXXXXXXX..... 12      12
AudioAddr<18>        XXXXXXXXXXXXXXXXXXXX..XXXXXXXXXXXXXX.... 34      34
Fsm/currState_FFd1   XXXXXXXXXXXXXXXXXXXXXX.............X.... 23      23
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               31/5
Number of signals used by logic mapping into function block:  31
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB2_1         (b)     
AudioAddr<7>          2       0     0   3     FB2_2   35    I/O     I/O
(unused)              0       0     0   5     FB2_3         (b)     
(unused)              0       0     0   5     FB2_4         (b)     
AudioAddr<8>          2       0     0   3     FB2_5   36    I/O     I/O
AudioAddr<9>          2       0     0   3     FB2_6   37    I/O     I/O
(unused)              0       0     0   5     FB2_7         (b)     
AudioAddr<10>         2       0     0   3     FB2_8   38    I/O     I/O
(unused)              0       0     0   5     FB2_9   39    GSR/I/O I
(unused)              0       0     0   5     FB2_10        (b)     
(unused)              0       0     0   5     FB2_11  40    GTS/I/O 
(unused)              0       0     0   5     FB2_12        (b)     
(unused)              0       0     0   5     FB2_13        (b)     
pwmData<1>            3       0     0   2     FB2_14  42    GTS/I/O (b)
AudioAddr<11>         2       0     0   3     FB2_15  43    I/O     I/O
pwmData<0>            3       0     0   2     FB2_16        (b)     (b)
AudioAddr<12>         2       0   \/2   1     FB2_17  44    I/O     I/O
$OpTx$FX_DC$41        7       2<-   0   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: AudioAddr<0>.PIN        12: AudioAddr_8_OBUF.LFBK  22: count<4> 
  2: AudioAddr<1>.PIN        13: AudioAddr_9_OBUF.LFBK  23: count<5> 
  3: AudioAddr<2>.PIN        14: AudioData<0>           24: count<6> 
  4: AudioAddr<3>.PIN        15: AudioData<1>           25: count<7> 
  5: AudioAddr<4>.PIN        16: count<0>               26: count<8> 
  6: AudioAddr<5>.PIN        17: count<10>              27: count<9> 
  7: AudioAddr<6>.PIN        18: count<11>              28: msgEnable 
  8: AudioAddr_10_OBUF.LFBK  19: count<1>               29: pwmData<0>.LFBK 
  9: AudioAddr_11_OBUF.LFBK  20: count<2>               30: pwmData<1>.LFBK 
 10: AudioAddr_12_OBUF.LFBK  21: count<3>               31: pwmData<2> 
 11: AudioAddr_7_OBUF.LFBK  

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
AudioAddr<7>         XXXXXXX...X....XXXXXXXXXXXXX............ 21      21
AudioAddr<8>         XXXXXXX...XX...XXXXXXXXXXXXX............ 22      22
AudioAddr<9>         XXXXXXX...XXX..XXXXXXXXXXXXX............ 23      23
AudioAddr<10>        XXXXXXXX..XXX..XXXXXXXXXXXXX............ 24      24
pwmData<1>           ..............XXXXXXXXXXXXXX.X.......... 15      15
AudioAddr<11>        XXXXXXXXX.XXX..XXXXXXXXXXXXX............ 25      25
pwmData<0>           .............X.XXXXXXXXXXXXXX........... 15      15
AudioAddr<12>        XXXXXXXXXXXXX..XXXXXXXXXXXXX............ 26      26
$OpTx$FX_DC$41       .....................XXX....XXX......... 6       6
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               35/1
Number of signals used by logic mapping into function block:  35
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB3_1         (b)     (b)
lfsrVal<0>           12       7<-   0   0     FB3_2   11    I/O     I
(unused)              0       0   /\2   3     FB3_3         (b)     (b)
(unused)              0       0     0   5     FB3_4         (b)     
(unused)              0       0     0   5     FB3_5   12    I/O     I
msgEnable             1       0     0   4     FB3_6         (b)     (b)
pwmData<7>            3       0     0   2     FB3_7         (b)     (b)
pwmData<4>            3       0     0   2     FB3_8   13    I/O     I
pwmData<3>            3       0     0   2     FB3_9   14    I/O     I
pwmData<2>            3       0     0   2     FB3_10        (b)     (b)
lfsrVal<5>            3       0     0   2     FB3_11  18    I/O     I
lfsrVal<4>            3       0     0   2     FB3_12        (b)     (b)
lfsrVal<3>            3       0     0   2     FB3_13        (b)     (b)
lfsrVal<2>            3       0     0   2     FB3_14  19    I/O     I
lfsrVal<1>            3       0   \/2   0     FB3_15  20    I/O     I
$OpTx$FX_DC$40        7       2<-   0   0     FB3_16        (b)     (b)
(unused)              0       0   \/5   0     FB3_17  22    I/O     I
Comp/Mcompar_PWMOut_cmp_lt0001_ALB34/Comp/Mcompar_PWMOut_cmp_lt0001_ALB34_D2
                     10       5<-   0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$41      13: count<4>          25: lfsrVal<7> 
  2: AudioData<2>        14: count<5>          26: msgEnable.LFBK 
  3: AudioData<3>        15: count<6>          27: msgLfsrEn 
  4: AudioData<4>        16: count<7>          28: pwmData<0> 
  5: AudioData<7>        17: count<8>          29: pwmData<1> 
  6: Fsm/currState_FFd1  18: count<9>          30: pwmData<2>.LFBK 
  7: count<0>            19: lfsrVal<0>.LFBK   31: pwmData<3>.LFBK 
  8: count<10>           20: lfsrVal<1>.LFBK   32: pwmData<4>.LFBK 
  9: count<11>           21: lfsrVal<2>.LFBK   33: pwmData<5> 
 10: count<1>            22: lfsrVal<3>.LFBK   34: pwmData<6> 
 11: count<2>            23: lfsrVal<4>.LFBK   35: pwmData<7>.LFBK 
 12: count<3>            24: lfsrVal<5>.LFBK  

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
lfsrVal<0>           ......X..XXX......X..XXXXX.............. 10      10
msgEnable            .....X....................X............. 2       2
pwmData<7>           ....X.XXXXXXXXXXXX.......X........X..... 15      15
pwmData<4>           ...X..XXXXXXXXXXXX.......X.....X........ 15      15
pwmData<3>           ..X...XXXXXXXXXXXX.......X....X......... 15      15
pwmData<2>           .X....XXXXXXXXXXXX.......X...X.......... 15      15
lfsrVal<5>           ......X..XXX..........XX.X.............. 7       7
lfsrVal<4>           ......X..XXX.........XX..X.............. 7       7
lfsrVal<3>           ......X..XXX........XX...X.............. 7       7
lfsrVal<2>           ......X..XXX.......XX....X.............. 7       7
lfsrVal<1>           ......X..XXX......XX.....X.............. 7       7
$OpTx$FX_DC$40       ..................XXX......XXX.......... 6       6
Comp/Mcompar_PWMOut_cmp_lt0001_ALB34/Comp/Mcompar_PWMOut_cmp_lt0001_ALB34_D2 
                     X......XX......XXX............XXXXX..... 11      11
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               36/0
Number of signals used by logic mapping into function block:  36
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2
                     10       8<- \/3   0     FB4_1         (b)     (b)
PWMOut               16      11<-   0   0     FB4_2   24    I/O     O
(unused)              0       0   /\5   0     FB4_3         (b)     (b)
(unused)              0       0   /\3   2     FB4_4         (b)     (b)
AudioAddr<0>          2       0     0   3     FB4_5   25    I/O     I/O
count<0>              1       0     0   4     FB4_6         (b)     (b)
count<1>              2       0     0   3     FB4_7         (b)     (b)
AudioAddr<1>          2       0     0   3     FB4_8   26    I/O     I/O
AudioAddr<2>          2       0     0   3     FB4_9   27    I/O     I/O
pwmData<6>            3       0     0   2     FB4_10        (b)     (b)
AudioAddr<3>          2       0     0   3     FB4_11  28    I/O     I/O
pwmData<5>            3       0     0   2     FB4_12        (b)     (b)
lfsrVal<7>            3       0     0   2     FB4_13        (b)     (b)
AudioAddr<4>          2       0     0   3     FB4_14  29    I/O     I/O
AudioAddr<5>          2       0     0   3     FB4_15  33    I/O     I/O
lfsrVal<6>            3       0     0   2     FB4_16        (b)     (b)
AudioAddr<6>          2       0   \/3   0     FB4_17  34    I/O     I/O
(unused)              0       0   \/5   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$40                                                                     13: count<0>.LFBK     25: lfsrVal<3> 
  2: AudioAddr_0_OBUF.LFBK                                                              14: count<10>         26: lfsrVal<4> 
  3: AudioAddr_1_OBUF.LFBK                                                              15: count<11>         27: lfsrVal<5> 
  4: AudioAddr_2_OBUF.LFBK                                                              16: count<1>.LFBK     28: lfsrVal<6>.LFBK 
  5: AudioAddr_3_OBUF.LFBK                                                              17: count<2>          29: lfsrVal<7>.LFBK 
  6: AudioAddr_4_OBUF.LFBK                                                              18: count<3>          30: msgEnable 
  7: AudioAddr_5_OBUF.LFBK                                                              19: count<4>          31: msgLfsrEn 
  8: AudioAddr_6_OBUF.LFBK                                                              20: count<5>          32: pwmData<3> 
  9: AudioData<5>                                                                       21: count<6>          33: pwmData<4> 
 10: AudioData<6>                                                                       22: count<7>          34: pwmData<5>.LFBK 
 11: Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2.LFBK  23: count<8>          35: pwmData<6>.LFBK 
 12: Comp/Mcompar_PWMOut_cmp_lt0001_ALB34/Comp/Mcompar_PWMOut_cmp_lt0001_ALB34_D2       24: count<9>          36: pwmData<7> 

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2 
                     X.......................XXXXX..XXXXX.... 11      11
PWMOut               ..........XX.XX........X..XXX.X..XXX.... 12      12
AudioAddr<0>         .X..........XXXXXXXXXXXX.....X.......... 14      14
count<0>             ............X................X.......... 2       2
count<1>             ............X..X.............X.......... 3       3
AudioAddr<1>         .XX.........XXXXXXXXXXXX.....X.......... 15      15
AudioAddr<2>         .XXX........XXXXXXXXXXXX.....X.......... 16      16
pwmData<6>           .........X..XXXXXXXXXXXX.....X....X..... 15      15
AudioAddr<3>         .XXXX.......XXXXXXXXXXXX.....X.......... 17      17
pwmData<5>           ........X...XXXXXXXXXXXX.....X...X...... 15      15
lfsrVal<7>           ............X..XXX.........XXX.......... 7       7
AudioAddr<4>         .XXXXX......XXXXXXXXXXXX.....X.......... 18      18
AudioAddr<5>         .XXXXXX.....XXXXXXXXXXXX.....X.......... 19      19
lfsrVal<6>           ............X..XXX........XX.X.......... 7       7
AudioAddr<6>         .XXXXXXX....XXXXXXXXXXXX.....X.......... 20      20
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$FX_DC$40 <= ((lfsrVal(1).EXP)
	OR (NOT lfsrVal(2).LFBK AND pwmData(2).LFBK)
	OR (pwmData(1) AND NOT lfsrVal(2).LFBK AND NOT lfsrVal(1).LFBK)
	OR (pwmData(1) AND pwmData(2).LFBK AND NOT lfsrVal(1).LFBK)
	OR (pwmData(1) AND pwmData(0) AND pwmData(2).LFBK AND 
	NOT lfsrVal(0).LFBK)
	OR (pwmData(0) AND pwmData(2).LFBK AND NOT lfsrVal(1).LFBK AND 
	NOT lfsrVal(0).LFBK));


$OpTx$FX_DC$41 <= ((AudioAddr_12_OBUF.EXP)
	OR (NOT count(6) AND pwmData(2))
	OR (NOT count(5) AND NOT count(6) AND pwmData(1).LFBK)
	OR (NOT count(5) AND pwmData(2) AND pwmData(1).LFBK)
	OR (NOT count(5) AND pwmData(2) AND NOT count(4) AND 
	pwmData(0).LFBK)
	OR (pwmData(2) AND NOT count(4) AND pwmData(0).LFBK AND 
	pwmData(1).LFBK));

FTCPE_AudioAddr0: FTCPE port map (AudioAddr(0),AudioAddr_T(0),Clock,'0','0');
AudioAddr_T(0) <= ((NOT msgEnable AND AudioAddr_0_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK));

FTCPE_AudioAddr1: FTCPE port map (AudioAddr(1),AudioAddr_T(1),Clock,'0','0');
AudioAddr_T(1) <= ((NOT msgEnable AND AudioAddr_1_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK AND 
	AudioAddr_0_OBUF.LFBK));

FTCPE_AudioAddr2: FTCPE port map (AudioAddr(2),AudioAddr_T(2),Clock,'0','0');
AudioAddr_T(2) <= ((NOT msgEnable AND AudioAddr_2_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK AND 
	AudioAddr_0_OBUF.LFBK AND AudioAddr_1_OBUF.LFBK));

FTCPE_AudioAddr3: FTCPE port map (AudioAddr(3),AudioAddr_T(3),Clock,'0','0');
AudioAddr_T(3) <= ((NOT msgEnable AND AudioAddr_3_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK AND 
	AudioAddr_0_OBUF.LFBK AND AudioAddr_1_OBUF.LFBK AND AudioAddr_2_OBUF.LFBK));

FTCPE_AudioAddr4: FTCPE port map (AudioAddr(4),AudioAddr_T(4),Clock,'0','0');
AudioAddr_T(4) <= ((NOT msgEnable AND AudioAddr_4_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK AND 
	AudioAddr_0_OBUF.LFBK AND AudioAddr_1_OBUF.LFBK AND AudioAddr_2_OBUF.LFBK AND 
	AudioAddr_3_OBUF.LFBK));

FTCPE_AudioAddr5: FTCPE port map (AudioAddr(5),AudioAddr_T(5),Clock,'0','0');
AudioAddr_T(5) <= ((NOT msgEnable AND AudioAddr_5_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK AND 
	AudioAddr_0_OBUF.LFBK AND AudioAddr_1_OBUF.LFBK AND AudioAddr_2_OBUF.LFBK AND 
	AudioAddr_3_OBUF.LFBK AND AudioAddr_4_OBUF.LFBK));

FTCPE_AudioAddr6: FTCPE port map (AudioAddr(6),AudioAddr_T(6),Clock,'0','0');
AudioAddr_T(6) <= ((NOT msgEnable AND AudioAddr_6_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND count(0).LFBK AND count(1).LFBK AND 
	AudioAddr_0_OBUF.LFBK AND AudioAddr_1_OBUF.LFBK AND AudioAddr_2_OBUF.LFBK AND 
	AudioAddr_3_OBUF.LFBK AND AudioAddr_4_OBUF.LFBK AND AudioAddr_5_OBUF.LFBK));

FTCPE_AudioAddr7: FTCPE port map (AudioAddr(7),AudioAddr_T(7),Clock,'0','0');
AudioAddr_T(7) <= ((NOT msgEnable AND AudioAddr_7_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND 
	AudioAddr(0).PIN AND AudioAddr(1).PIN AND AudioAddr(2).PIN AND 
	AudioAddr(3).PIN AND AudioAddr(4).PIN AND AudioAddr(5).PIN AND 
	AudioAddr(6).PIN));

FTCPE_AudioAddr8: FTCPE port map (AudioAddr(8),AudioAddr_T(8),Clock,'0','0');
AudioAddr_T(8) <= ((NOT msgEnable AND AudioAddr_8_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND 
	AudioAddr_7_OBUF.LFBK AND AudioAddr(0).PIN AND AudioAddr(1).PIN AND 
	AudioAddr(2).PIN AND AudioAddr(3).PIN AND AudioAddr(4).PIN AND 
	AudioAddr(5).PIN AND AudioAddr(6).PIN));

FTCPE_AudioAddr9: FTCPE port map (AudioAddr(9),AudioAddr_T(9),Clock,'0','0');
AudioAddr_T(9) <= ((NOT msgEnable AND AudioAddr_9_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND 
	AudioAddr_7_OBUF.LFBK AND AudioAddr_8_OBUF.LFBK AND AudioAddr(0).PIN AND 
	AudioAddr(1).PIN AND AudioAddr(2).PIN AND AudioAddr(3).PIN AND 
	AudioAddr(4).PIN AND AudioAddr(5).PIN AND AudioAddr(6).PIN));

FTCPE_AudioAddr10: FTCPE port map (AudioAddr(10),AudioAddr_T(10),Clock,'0','0');
AudioAddr_T(10) <= ((NOT msgEnable AND AudioAddr_10_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND 
	AudioAddr_7_OBUF.LFBK AND AudioAddr_8_OBUF.LFBK AND AudioAddr_9_OBUF.LFBK AND 
	AudioAddr(0).PIN AND AudioAddr(1).PIN AND AudioAddr(2).PIN AND 
	AudioAddr(3).PIN AND AudioAddr(4).PIN AND AudioAddr(5).PIN AND 
	AudioAddr(6).PIN));

FTCPE_AudioAddr11: FTCPE port map (AudioAddr(11),AudioAddr_T(11),Clock,'0','0');
AudioAddr_T(11) <= ((NOT msgEnable AND AudioAddr_11_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND 
	AudioAddr_7_OBUF.LFBK AND AudioAddr_8_OBUF.LFBK AND AudioAddr_9_OBUF.LFBK AND 
	AudioAddr_10_OBUF.LFBK AND AudioAddr(0).PIN AND AudioAddr(1).PIN AND 
	AudioAddr(2).PIN AND AudioAddr(3).PIN AND AudioAddr(4).PIN AND 
	AudioAddr(5).PIN AND AudioAddr(6).PIN));

FTCPE_AudioAddr12: FTCPE port map (AudioAddr(12),AudioAddr_T(12),Clock,'0','0');
AudioAddr_T(12) <= ((NOT msgEnable AND AudioAddr_12_OBUF.LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND 
	AudioAddr_7_OBUF.LFBK AND AudioAddr_8_OBUF.LFBK AND AudioAddr_9_OBUF.LFBK AND 
	AudioAddr_10_OBUF.LFBK AND AudioAddr_11_OBUF.LFBK AND AudioAddr(0).PIN AND 
	AudioAddr(1).PIN AND AudioAddr(2).PIN AND AudioAddr(3).PIN AND 
	AudioAddr(4).PIN AND AudioAddr(5).PIN AND AudioAddr(6).PIN));

FTCPE_AudioAddr13: FTCPE port map (AudioAddr(13),AudioAddr_T(13),Clock,'0','0');
AudioAddr_T(13) <= ((NOT msgEnable AND AudioAddr_13_OBUF.LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(11).LFBK AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK AND AudioAddr(0).PIN AND 
	AudioAddr(10).PIN AND AudioAddr(11).PIN AND AudioAddr(12).PIN AND 
	AudioAddr(1).PIN AND AudioAddr(2).PIN AND AudioAddr(3).PIN AND 
	AudioAddr(4).PIN AND AudioAddr(5).PIN AND AudioAddr(6).PIN AND 
	AudioAddr(7).PIN AND AudioAddr(8).PIN AND AudioAddr(9).PIN));

FTCPE_AudioAddr14: FTCPE port map (AudioAddr(14),AudioAddr_T(14),Clock,'0','0');
AudioAddr_T(14) <= ((NOT msgEnable AND AudioAddr_14_OBUF.LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(11).LFBK AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK AND AudioAddr_13_OBUF.LFBK AND 
	AudioAddr(0).PIN AND AudioAddr(10).PIN AND AudioAddr(11).PIN AND 
	AudioAddr(12).PIN AND AudioAddr(1).PIN AND AudioAddr(2).PIN AND 
	AudioAddr(3).PIN AND AudioAddr(4).PIN AND AudioAddr(5).PIN AND 
	AudioAddr(6).PIN AND AudioAddr(7).PIN AND AudioAddr(8).PIN AND 
	AudioAddr(9).PIN));

FTCPE_AudioAddr15: FTCPE port map (AudioAddr(15),AudioAddr_T(15),Clock,'0','0');
AudioAddr_T(15) <= ((NOT msgEnable AND AudioAddr_15_OBUF.LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(11).LFBK AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK AND AudioAddr_13_OBUF.LFBK AND 
	AudioAddr_14_OBUF.LFBK AND AudioAddr(0).PIN AND AudioAddr(10).PIN AND 
	AudioAddr(11).PIN AND AudioAddr(12).PIN AND AudioAddr(1).PIN AND 
	AudioAddr(2).PIN AND AudioAddr(3).PIN AND AudioAddr(4).PIN AND 
	AudioAddr(5).PIN AND AudioAddr(6).PIN AND AudioAddr(7).PIN AND 
	AudioAddr(8).PIN AND AudioAddr(9).PIN));

FTCPE_AudioAddr16: FTCPE port map (AudioAddr(16),AudioAddr_T(16),Clock,'0','0');
AudioAddr_T(16) <= ((NOT msgEnable AND AudioAddr_16_OBUF.LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(11).LFBK AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK AND AudioAddr_13_OBUF.LFBK AND 
	AudioAddr_14_OBUF.LFBK AND AudioAddr_15_OBUF.LFBK AND AudioAddr(0).PIN AND 
	AudioAddr(10).PIN AND AudioAddr(11).PIN AND AudioAddr(12).PIN AND 
	AudioAddr(1).PIN AND AudioAddr(2).PIN AND AudioAddr(3).PIN AND 
	AudioAddr(4).PIN AND AudioAddr(5).PIN AND AudioAddr(6).PIN AND 
	AudioAddr(7).PIN AND AudioAddr(8).PIN AND AudioAddr(9).PIN));

FTCPE_AudioAddr17: FTCPE port map (AudioAddr(17),AudioAddr_T(17),Clock,'0','0');
AudioAddr_T(17) <= ((NOT msgEnable AND AudioAddr_17_OBUF.LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(11).LFBK AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK AND AudioAddr_13_OBUF.LFBK AND 
	AudioAddr_14_OBUF.LFBK AND AudioAddr_15_OBUF.LFBK AND AudioAddr_16_OBUF.LFBK AND 
	AudioAddr(0).PIN AND AudioAddr(10).PIN AND AudioAddr(11).PIN AND 
	AudioAddr(12).PIN AND AudioAddr(1).PIN AND AudioAddr(2).PIN AND 
	AudioAddr(3).PIN AND AudioAddr(4).PIN AND AudioAddr(5).PIN AND 
	AudioAddr(6).PIN AND AudioAddr(7).PIN AND AudioAddr(8).PIN AND 
	AudioAddr(9).PIN));

FTCPE_AudioAddr18: FTCPE port map (AudioAddr(18),AudioAddr_T(18),Clock,'0','0');
AudioAddr_T(18) <= ((NOT AudioAddr(18) AND NOT msgEnable AND msgLfsrEn)
	OR (NOT AudioAddr(18) AND NOT msgEnable AND 
	Fsm/currState_FFd1.LFBK)
	OR (AudioAddr(18) AND NOT msgEnable AND NOT msgLfsrEn AND 
	NOT Fsm/currState_FFd1.LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(11).LFBK AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK AND AudioAddr_13_OBUF.LFBK AND 
	AudioAddr_14_OBUF.LFBK AND AudioAddr_15_OBUF.LFBK AND AudioAddr_16_OBUF.LFBK AND 
	AudioAddr_17_OBUF.LFBK AND AudioAddr(0).PIN AND AudioAddr(10).PIN AND 
	AudioAddr(11).PIN AND AudioAddr(12).PIN AND AudioAddr(1).PIN AND 
	AudioAddr(2).PIN AND AudioAddr(3).PIN AND AudioAddr(4).PIN AND 
	AudioAddr(5).PIN AND AudioAddr(6).PIN AND AudioAddr(7).PIN AND 
	AudioAddr(8).PIN AND AudioAddr(9).PIN));


Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2 <= ((EXP5_.EXP)
	OR (pwmData(4) AND NOT lfsrVal(4))
	OR (NOT lfsrVal(5) AND pwmData(5).LFBK));


Comp/Mcompar_PWMOut_cmp_lt0001_ALB34/Comp/Mcompar_PWMOut_cmp_lt0001_ALB34_D2 <= ((EXP2_.EXP)
	OR (pwmData(6) AND NOT count(10))
	OR (NOT count(8) AND pwmData(4).LFBK)
	OR (NOT count(11) AND pwmData(7).LFBK)
	OR (NOT count(9) AND pwmData(5))
	OR (NOT count(7) AND pwmData(4).LFBK AND pwmData(3).LFBK));













FTCPE_Fsm/currState_FFd1: FTCPE port map (Fsm/currState_FFd1,Fsm/currState_FFd1_T,Clock,'0','0');
Fsm/currState_FFd1_T <= ((Switch1 AND NOT Switch2 AND NOT msgLfsrEn AND 
	NOT Fsm/currState_FFd1.LFBK)
	OR (AudioAddr(18) AND NOT AudioAddr_13_OBUF.LFBK AND 
	NOT AudioAddr_14_OBUF.LFBK AND AudioAddr_15_OBUF.LFBK AND NOT AudioAddr_16_OBUF.LFBK AND 
	NOT AudioAddr_17_OBUF.LFBK AND Fsm/currState_FFd1.LFBK AND NOT AudioAddr(0).PIN AND 
	NOT AudioAddr(10).PIN AND NOT AudioAddr(11).PIN AND NOT AudioAddr(12).PIN AND 
	NOT AudioAddr(1).PIN AND NOT AudioAddr(2).PIN AND NOT AudioAddr(3).PIN AND 
	NOT AudioAddr(4).PIN AND NOT AudioAddr(5).PIN AND NOT AudioAddr(6).PIN AND 
	NOT AudioAddr(7).PIN AND NOT AudioAddr(8).PIN AND NOT AudioAddr(9).PIN));

FDCPE_PWMOut: FDCPE port map (PWMOut,PWMOut_D,Clock,'0','0');
PWMOut_D <= ((
	Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2.EXP)
	OR (EXP3_.EXP)
	OR (msgLfsrEn AND 
	NOT Comp/Mcompar_PWMOut_cmp_lt0000_ALB34/Comp/Mcompar_PWMOut_cmp_lt0000_ALB34_D2.LFBK)
	OR (NOT msgLfsrEn AND 
	NOT Comp/Mcompar_PWMOut_cmp_lt0001_ALB34/Comp/Mcompar_PWMOut_cmp_lt0001_ALB34_D2)
	OR (NOT pwmData(7) AND msgLfsrEn AND lfsrVal(7).LFBK)
	OR (NOT pwmData(7) AND NOT msgLfsrEn AND count(11))
	OR (NOT pwmData(7) AND msgLfsrEn AND NOT pwmData(6).LFBK AND 
	lfsrVal(6).LFBK));

FDCPE_count0: FDCPE port map (count(0),count_D(0),Clock,'0','0');
count_D(0) <= (msgEnable AND NOT count(0).LFBK);

FDCPE_count1: FDCPE port map (count(1),count_D(1),Clock,'0','0');
count_D(1) <= ((msgEnable AND count(0).LFBK AND NOT count(1).LFBK)
	OR (msgEnable AND NOT count(0).LFBK AND count(1).LFBK));

FTCPE_count2: FTCPE port map (count(2),count_T(2),Clock,'0','0');
count_T(2) <= ((NOT msgEnable AND count(2).LFBK)
	OR (msgEnable AND count(0) AND count(1)));

FTCPE_count3: FTCPE port map (count(3),count_T(3),Clock,'0','0');
count_T(3) <= ((NOT msgEnable AND count(3).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(2).LFBK));

FTCPE_count4: FTCPE port map (count(4),count_T(4),Clock,'0','0');
count_T(4) <= ((NOT msgEnable AND count(4).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(2).LFBK AND 
	count(3).LFBK));

FTCPE_count5: FTCPE port map (count(5),count_T(5),Clock,'0','0');
count_T(5) <= ((NOT msgEnable AND count(5).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK));

FTCPE_count6: FTCPE port map (count(6),count_T(6),Clock,'0','0');
count_T(6) <= ((NOT msgEnable AND count(6).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(5).LFBK AND 
	count(2).LFBK AND count(3).LFBK AND count(4).LFBK));

FTCPE_count7: FTCPE port map (count(7),count_T(7),Clock,'0','0');
count_T(7) <= ((NOT msgEnable AND count(7).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(5).LFBK AND 
	count(6).LFBK AND count(2).LFBK AND count(3).LFBK AND count(4).LFBK));

FTCPE_count8: FTCPE port map (count(8),count_T(8),Clock,'0','0');
count_T(8) <= ((NOT msgEnable AND count(8).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(5).LFBK AND 
	count(6).LFBK AND count(7).LFBK AND count(2).LFBK AND count(3).LFBK AND 
	count(4).LFBK));

FTCPE_count9: FTCPE port map (count(9),count_T(9),Clock,'0','0');
count_T(9) <= ((NOT msgEnable AND count(9).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(8).LFBK AND 
	count(5).LFBK AND count(6).LFBK AND count(7).LFBK AND count(2).LFBK AND 
	count(3).LFBK AND count(4).LFBK));

FTCPE_count10: FTCPE port map (count(10),count_T(10),Clock,'0','0');
count_T(10) <= ((NOT msgEnable AND count(10).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND count(8).LFBK AND 
	count(5).LFBK AND count(6).LFBK AND count(7).LFBK AND count(9).LFBK AND 
	count(2).LFBK AND count(3).LFBK AND count(4).LFBK));

FTCPE_count11: FTCPE port map (count(11),count_T(11),Clock,'0','0');
count_T(11) <= ((NOT msgEnable AND count(11).LFBK)
	OR (msgEnable AND count(0) AND count(1) AND 
	count(10).LFBK AND count(8).LFBK AND count(5).LFBK AND count(6).LFBK AND 
	count(7).LFBK AND count(9).LFBK AND count(2).LFBK AND count(3).LFBK AND 
	count(4).LFBK));

FDCPE_lfsrVal0: FDCPE port map (lfsrVal(0),lfsrVal_D(0),Clock,'0','0');
lfsrVal_D(0) <= ((EXP0_.EXP)
	OR (EXP1_.EXP)
	OR (NOT count(0) AND msgEnable.LFBK AND NOT lfsrVal(0).LFBK)
	OR (NOT count(1) AND msgEnable.LFBK AND NOT lfsrVal(0).LFBK)
	OR (NOT count(2) AND msgEnable.LFBK AND NOT lfsrVal(0).LFBK)
	OR (NOT count(3) AND msgEnable.LFBK AND NOT lfsrVal(0).LFBK)
	OR (count(0) AND lfsrVal(7) AND count(1) AND count(2) AND 
	count(3) AND msgEnable.LFBK AND lfsrVal(4).LFBK AND 
	lfsrVal(3).LFBK AND lfsrVal(5).LFBK));

FTCPE_lfsrVal1: FTCPE port map (lfsrVal(1),lfsrVal_T(1),Clock,'0','0');
lfsrVal_T(1) <= ((NOT msgEnable.LFBK AND NOT lfsrVal(1).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	NOT lfsrVal(1).LFBK AND lfsrVal(0).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	msgEnable.LFBK AND lfsrVal(1).LFBK AND NOT lfsrVal(0).LFBK));

FTCPE_lfsrVal2: FTCPE port map (lfsrVal(2),lfsrVal_T(2),Clock,'0','0');
lfsrVal_T(2) <= ((NOT msgEnable.LFBK AND NOT lfsrVal(2).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	NOT lfsrVal(2).LFBK AND lfsrVal(1).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	msgEnable.LFBK AND lfsrVal(2).LFBK AND NOT lfsrVal(1).LFBK));

FTCPE_lfsrVal3: FTCPE port map (lfsrVal(3),lfsrVal_T(3),Clock,'0','0');
lfsrVal_T(3) <= ((NOT msgEnable.LFBK AND NOT lfsrVal(3).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	NOT lfsrVal(3).LFBK AND lfsrVal(2).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	msgEnable.LFBK AND lfsrVal(3).LFBK AND NOT lfsrVal(2).LFBK));

FTCPE_lfsrVal4: FTCPE port map (lfsrVal(4),lfsrVal_T(4),Clock,'0','0');
lfsrVal_T(4) <= ((NOT msgEnable.LFBK AND NOT lfsrVal(4).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	NOT lfsrVal(4).LFBK AND lfsrVal(3).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	msgEnable.LFBK AND lfsrVal(4).LFBK AND NOT lfsrVal(3).LFBK));

FTCPE_lfsrVal5: FTCPE port map (lfsrVal(5),lfsrVal_T(5),Clock,'0','0');
lfsrVal_T(5) <= ((NOT msgEnable.LFBK AND NOT lfsrVal(5).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	lfsrVal(4).LFBK AND NOT lfsrVal(5).LFBK)
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	msgEnable.LFBK AND NOT lfsrVal(4).LFBK AND lfsrVal(5).LFBK));

FTCPE_lfsrVal6: FTCPE port map (lfsrVal(6),lfsrVal_T(6),Clock,'0','0');
lfsrVal_T(6) <= ((NOT msgEnable AND NOT lfsrVal(6).LFBK)
	OR (lfsrVal(5) AND count(2) AND count(3) AND 
	count(0).LFBK AND count(1).LFBK AND NOT lfsrVal(6).LFBK)
	OR (msgEnable AND NOT lfsrVal(5) AND count(2) AND count(3) AND 
	count(0).LFBK AND count(1).LFBK AND lfsrVal(6).LFBK));

FTCPE_lfsrVal7: FTCPE port map (lfsrVal(7),lfsrVal_T(7),Clock,'0','0');
lfsrVal_T(7) <= ((NOT msgEnable AND NOT lfsrVal(7).LFBK)
	OR (count(2) AND count(3) AND count(0).LFBK AND 
	count(1).LFBK AND lfsrVal(6).LFBK AND NOT lfsrVal(7).LFBK)
	OR (msgEnable AND count(2) AND count(3) AND count(0).LFBK AND 
	count(1).LFBK AND NOT lfsrVal(6).LFBK AND lfsrVal(7).LFBK));

FDCPE_msgEnable: FDCPE port map (msgEnable,msgEnable_D,Clock,'0','0');
msgEnable_D <= (NOT msgLfsrEn AND NOT Fsm/currState_FFd1);

FTCPE_msgLfsrEn: FTCPE port map (msgLfsrEn,msgLfsrEn_T,Clock,'0','0');
msgLfsrEn_T <= ((Switch2 AND NOT msgLfsrEn AND NOT Fsm/currState_FFd1.LFBK)
	OR (AudioAddr(18) AND msgLfsrEn AND 
	NOT AudioAddr_13_OBUF.LFBK AND NOT AudioAddr_14_OBUF.LFBK AND AudioAddr_15_OBUF.LFBK AND 
	NOT AudioAddr_16_OBUF.LFBK AND NOT AudioAddr_17_OBUF.LFBK AND NOT AudioAddr(0).PIN AND 
	NOT AudioAddr(10).PIN AND NOT AudioAddr(11).PIN AND NOT AudioAddr(12).PIN AND 
	NOT AudioAddr(1).PIN AND NOT AudioAddr(2).PIN AND NOT AudioAddr(3).PIN AND 
	NOT AudioAddr(4).PIN AND NOT AudioAddr(5).PIN AND NOT AudioAddr(6).PIN AND 
	NOT AudioAddr(7).PIN AND NOT AudioAddr(8).PIN AND NOT AudioAddr(9).PIN));

FTCPE_pwmData0: FTCPE port map (pwmData(0),pwmData_T(0),Clock,'0','0');
pwmData_T(0) <= ((NOT msgEnable AND pwmData(0).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND NOT AudioData(0) AND 
	pwmData(0).LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND AudioData(0) AND 
	NOT pwmData(0).LFBK));

FTCPE_pwmData1: FTCPE port map (pwmData(1),pwmData_T(1),Clock,'0','0');
pwmData_T(1) <= ((NOT msgEnable AND pwmData(1).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND NOT AudioData(1) AND 
	pwmData(1).LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(0) AND 
	count(11) AND count(5) AND count(6) AND count(7) AND count(9) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND AudioData(1) AND 
	NOT pwmData(1).LFBK));

FTCPE_pwmData2: FTCPE port map (pwmData(2),pwmData_T(2),Clock,'0','0');
pwmData_T(2) <= ((NOT msgEnable.LFBK AND pwmData(2).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND NOT AudioData(2) AND 
	pwmData(2).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND AudioData(2) AND 
	msgEnable.LFBK AND NOT pwmData(2).LFBK));

FTCPE_pwmData3: FTCPE port map (pwmData(3),pwmData_T(3),Clock,'0','0');
pwmData_T(3) <= ((NOT msgEnable.LFBK AND pwmData(3).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND NOT AudioData(3) AND 
	pwmData(3).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND AudioData(3) AND 
	msgEnable.LFBK AND NOT pwmData(3).LFBK));

FTCPE_pwmData4: FTCPE port map (pwmData(4),pwmData_T(4),Clock,'0','0');
pwmData_T(4) <= ((NOT msgEnable.LFBK AND pwmData(4).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND NOT AudioData(4) AND 
	pwmData(4).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND AudioData(4) AND 
	msgEnable.LFBK AND NOT pwmData(4).LFBK));

FTCPE_pwmData5: FTCPE port map (pwmData(5),pwmData_T(5),Clock,'0','0');
pwmData_T(5) <= ((NOT msgEnable AND pwmData(5).LFBK)
	OR (count(10) AND count(8) AND count(11) AND count(5) AND 
	count(6) AND count(7) AND count(9) AND count(2) AND count(3) AND 
	count(4) AND NOT AudioData(5) AND count(0).LFBK AND count(1).LFBK AND 
	pwmData(5).LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND AudioData(5) AND count(0).LFBK AND 
	count(1).LFBK AND NOT pwmData(5).LFBK));

FTCPE_pwmData6: FTCPE port map (pwmData(6),pwmData_T(6),Clock,'0','0');
pwmData_T(6) <= ((NOT msgEnable AND pwmData(6).LFBK)
	OR (count(10) AND count(8) AND count(11) AND count(5) AND 
	count(6) AND count(7) AND count(9) AND count(2) AND count(3) AND 
	count(4) AND NOT AudioData(6) AND count(0).LFBK AND count(1).LFBK AND 
	pwmData(6).LFBK)
	OR (msgEnable AND count(10) AND count(8) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(2) AND 
	count(3) AND count(4) AND AudioData(6) AND count(0).LFBK AND 
	count(1).LFBK AND NOT pwmData(6).LFBK));

FTCPE_pwmData7: FTCPE port map (pwmData(7),pwmData_T(7),Clock,'0','0');
pwmData_T(7) <= ((NOT msgEnable.LFBK AND pwmData(7).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND NOT AudioData(7) AND 
	pwmData(7).LFBK)
	OR (count(10) AND count(8) AND count(0) AND count(11) AND 
	count(5) AND count(6) AND count(7) AND count(9) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND AudioData(7) AND 
	msgEnable.LFBK AND NOT pwmData(7).LFBK));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE); 
 FTCPE (Q,D,C,CLR,PRE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9572-7-PC44


   --------------------------------  
  /6  5  4  3  2  1  44 43 42 41 40 \
 | 7                             39 | 
 | 8                             38 | 
 | 9                             37 | 
 | 10                            36 | 
 | 11         XC9572-7-PC44      35 | 
 | 12                            34 | 
 | 13                            33 | 
 | 14                            32 | 
 | 15                            31 | 
 | 16                            30 | 
 | 17                            29 | 
 \ 18 19 20 21 22 23 24 25 26 27 28 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 AudioAddr<13>                    23 GND                           
  2 AudioAddr<14>                    24 PWMOut                        
  3 AudioAddr<15>                    25 AudioAddr<0>                  
  4 AudioAddr<16>                    26 AudioAddr<1>                  
  5 Switch1                          27 AudioAddr<2>                  
  6 TIE                              28 AudioAddr<3>                  
  7 Clock                            29 AudioAddr<4>                  
  8 AudioAddr<17>                    30 TDO                           
  9 AudioAddr<18>                    31 GND                           
 10 GND                              32 VCC                           
 11 AudioData<7>                     33 AudioAddr<5>                  
 12 AudioData<6>                     34 AudioAddr<6>                  
 13 AudioData<5>                     35 AudioAddr<7>                  
 14 AudioData<4>                     36 AudioAddr<8>                  
 15 TDI                              37 AudioAddr<9>                  
 16 TMS                              38 AudioAddr<10>                 
 17 TCK                              39 Switch2                       
 18 AudioData<3>                     40 TIE                           
 19 AudioData<2>                     41 VCC                           
 20 AudioData<1>                     42 TIE                           
 21 VCC                              43 AudioAddr<11>                 
 22 AudioData<0>                     44 AudioAddr<12>                 


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9572-7-PC44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
FASTConnect/UIM optimzation                 : ON
Local Feedback                              : ON
Pin Feedback                                : ON
Input Limit                                 : 36
Pterm Limit                                 : 25
